Open monsters.txt fle 
Read every line of the text
Split when a comma is detected 
If the length of the line is more than 1 print the name of the monster 
If the length of the line is less than 1, stop

2)

monster = open("monsters.txt")
while True:
    theline = monster.readline()
    monsterlist = theline.split(',')
    if len(theline) > 1:
        print(monsterlist[1])
    if len(theline) == 0:
        break
monster.close()

Ex task:

monster = open("monsters.txt")

def findmonster(name):
    count = 0
    namelist = []
    failcount = 0
    successcount = 0
    while True:
        theline = monster.readline()
        count += 1
        monsterlist = theline.split(',')
        if len(theline) > 1:
            print(monsterlist[1])
            namelist.append(monsterlist[1])
        if len(theline) == 0:
            break
    print(count)
    for i in namelist:
        if i == name:
            successcount += 1
    if successcount == 1:
        print("Monster Found")
    else:
        print("Monster not found")

2.1

monster = open("monsters.txt")

isfound = 0 #0 is false, 1 is true
monstername = input("Name of monster?")
while True:
    theline = monster.readline()
    monsterlist = theline.split(',')
    if len(theline) > 1:
        isfound += 0
        if monsterlist[1] == monstername:
            isfound += 1
    if len(theline) == 0:
        break

if isfound == 1:
    print("Monster Found!")
if isfound == 0:
    print("Monster not found!")

2.2

3

monster = open("monsters.txt")
monstercard = []

def monstercreator(name, origin, description):
    monstercard.append(name)
    monstercard.append(origin)
    monstercard.append(description)
    
def attacklevel(levelatk):
    if 0 <= levelatk <= 30:
        monstercard.append(levelatk)
    else:
        print("Your Number is too high, please input a number between 0-30")

def magicforcelvl(levelmagicforce):
    if 0 <= levelmagicforce <= 30:
        monstercard.append(levelmagicforce)
    else:
        print("Your Number is too high, please input a number between 0-30")

def magicdefencelvl(magicdf):
    if 0 <= magicdf <= 30:
        monstercard.append(magicdf)
    else:
        print("Your Number is too high, please input a number between 0-30")

def defencelvl(deflvl):
    if 0 <= deflvl <= 30:
        monstercard.append(deflvl)
    else:
        print("Your Number is too high, please input a number between 0-30")

def intelligencelevel(intelvl):
    if 0 <= intelvl <= 30:
        monstercard.append(intelvl)
    else:
        print("Your Number is too high, please input a number between 0-30")

def healthlevel(healthlvl):
    if 0 <= healthlvl <= 30:
        monstercard.append(healthlvl)
    else:
        print("Your Number is too high, please input a number between 0-30")
    
def experience(explvl):
    if 0 <= explvl <= 30:
        monstercard.append(explvl)
    else:
        print("Your Number is too high, please input a number between 0-30")

monstercreator(input("Name?"), input("Origin?"), input("Description"))
attacklevel(int(input("Attack Level")))
magicforcelvl(int(input("Magic Force Level?")))
magicdefencelvl(int(input("Magic Defence Level?")))
defencelvl(int(input("Defence Level?")))
intelligencelevel(int(input("Intelligence Level")))
healthlevel(int(input("Health Level")))
experience(int(input("exp Level")))
print("Monster Card: ", monstercard)
