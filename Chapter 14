1) 
a)

xs = ["hello", "yeet", "kalif"]
ys = ["yeet", "hi", "saurav"]

def merge(xs, ys):

    result = []

    for i in xs:
        for j in ys:
            if i == j:
                result.append(i)
                break

    return result

print(merge(xs, ys))

b)

xs = ["hello", "yeet", "kalif"]
ys = ["yeet", "hi", "saurav"]

def merge(xs, ys):

    result = []

    for i in xs:
        for j in ys:
            if i == j:
                break
            else:
                result.append(i)
                print(result)
    return result

print(merge(xs, ys))

# def find_unknowns_merge_pattern(vocab, wds):
#     """ Both the vocab and wds must be sorted.  Return a new
#         list of words from wds that do not occur in vocab.
#     """
#
#     result = []
#     xi = 0
#     yi = 0
#
#     while True:
#         if xi >= len(vocab):
#             result.extend(wds[yi:])
#             return result
#
#         if yi >= len(wds):
#             return result
#
#         if vocab[xi] == wds[yi]:  # Good, word exists in vocab
#             yi += 1
#
#         elif vocab[xi] < wds[yi]: # Move past this vocab word,
#             xi += 1
#
#         else:                     # Got word that is not in vocab
#             result.append(wds[yi])
#             yi += 1


c)

