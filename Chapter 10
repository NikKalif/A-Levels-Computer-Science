1) 

import turtle

turtle.setup(400,500)                # Determine the window size
wn = turtle.Screen()                 # Get a reference to the window
wn.title("Handling keypresses!")     # Change the window title
wn.bgcolor("lightgreen")             # Set the background color
tess = turtle.Turtle()               # Create our favorite turtle

# The next four functions are our "event handlers".
def h1():
   tess.forward(30)

def h2():
   tess.left(45)

def h3():
   tess.right(45)

def h4():
    wn.bye()

def blue():
    tess.color("Blue")

def red():
    tess.color("Red")

def green():
    tess.color("Green")

def increasesize():
    size = tess.width()
    if size < 20:
        tess.width(size+1)

def decreasesize():
    size = tess.width()
    if size > 20:
        tess.width(size-1)
    # Close down the turtle window

# These lines "wire up" keypresses to the handlers we've defined.
wn.onkey(h1, "Up")
wn.onkey(h2, "Left")
wn.onkey(h3, "Right")
wn.onkey(h4, "q")
wn.onkey(blue, "b")
wn.onkey(red, "r")
wn.onkey(green, "g")
wn.onkey(increasesize, "+")
wn.onkey(decreasesize, "-")

# Now we need to tell the window to start listening for events,
# If any of the keys that we're monitoring is pressed, its
# handler will be called.
wn.listen()
wn.mainloop()

c)

import turtle

turtle.setup(400,500)                # Determine the window size
wn = turtle.Screen()                 # Get a reference to the window
wn.title("Handling keypresses!")     # Change the window title
wn.bgcolor("lightgreen")             # Set the background color
tess = turtle.Turtle()               # Create our favorite turtle

# The next four functions are our "event handlers".
def h1():
   tess.forward(30)

def h2():
   tess.left(45)

def h3():
   tess.right(45)

def h4():
    wn.bye()

def blue():
    tess.color("Blue")

def red():
    tess.color("Red")

def green():
    tess.color("Green")

def increasesize():
    size = tess.width()
    if size < 20:
        tess.width(size+1)

def decreasesize():
    size = tess.width()
    if size > 20:
        tess.width(size-1)

def changecolorblue():
    wn.bgcolor("Blue")

def changecolorred():
    wn.bgcolor("red")
    # Close down the turtle window

# These lines "wire up" keypresses to the handlers we've defined.
wn.onkey(h1, "Up")
wn.onkey(h2, "Left")
wn.onkey(h3, "Right")
wn.onkey(h4, "q")
wn.onkey(blue, "b")
wn.onkey(red, "r")
wn.onkey(green, "g")
wn.onkey(increasesize, "+")
wn.onkey(decreasesize, "-")
wn.onkey(changecolorblue, "q")
wn.onkey(changecolorred, "w")


# Now we need to tell the window to start listening for events,
# If any of the keys that we're monitoring is pressed, its
# handler will be called.
wn.listen()
wn.mainloop()

2) 

import turtle           # Tess becomes a traffic light.

turtle.setup(400,500)
wn = turtle.Screen()
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()


def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()


draw_housing()

tess.penup()
# Position tess onto the place where the green light should be
tess.forward(40)
tess.left(90)
tess.forward(50)
# Turn tess into a big green circle
tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("green")

# A traffic light is a kind of state machine with three states,
# Green, Orange, Red.  We number these states  0, 1, 2
# When the machine changes state, we change tess' position and
# her fillcolor.

# This variable holds the current state of the machine
state_num = 0


def advance_state_machine():
    global state_num
    if state_num == 0:       # Transition from state 0 to state 1
        tess.forward(70)
        tess.fillcolor("orange")
        state_num = 1
    elif state_num == 1:     # Transition from state 1 to state 2
        tess.forward(70)
        tess.fillcolor("red")
        state_num = 2
    else:                    # Transition from state 2 to state 0
        tess.back(140)
        tess.fillcolor("green")
        state_num = 0
    wn.ontimer(advance_state_machine, 1000)

# Bind the event handler to the space key.

advance_state_machine()

wn.listen()                      # Listen for events
wn.mainloop()

3)

import turtle           # Tess becomes a traffic light.

turtle.setup(400,500)
wn = turtle.Screen()
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()

red = turtle.Turtle()
green = turtle.Turtle()
yellow = turtle.Turtle()


def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()

draw_housing()

tess.penup()
# Position tess onto the place where the green light should be
tess.forward(40)
tess.left(90)
tess.forward(50)
# Turn tess into a big green circle
tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("green")

state_num = 0

def traffic_lights():
    global state_num
    red.hideturtle()
    red.forward(40)
    red.left(90)
    red.forward(150)
    red.shape("circle")
    red.shapesize(3)
    red.fillcolor("red")
    green.hideturtle()
    green.forward(40)
    green.left(90)
    green.forward(50)
    green.shape("circle")
    green.shapesize(3)
    green.fillcolor("green")
    yellow.hideturtle()
    yellow.forward(40)
    yellow.left(90)
    yellow.forward(100)
    yellow.shape("circle")
    yellow.shapesize(3)
    yellow.fillcolor("yellow")

    if state_num == 0:
        green.showturtle()
        state_num = 1
    elif state_num == 1:
        green.hideturtle()
        yellow.showturtle()
        state_num =2
    else:
        yellow.hideturtle()
        red.showturtle()
        state_num = 0

#
# def advance_state_machine():
#     global state_num
#     if state_num == 0:       # Transition from state 0 to state 1
#         tess.forward(70)
#         tess.fillcolor("orange")
#         state_num = 1
#     elif state_num == 1:     # Transition from state 1 to state 2
#         tess.forward(70)
#         tess.fillcolor("red")
#         state_num = 2
#     else:                    # Transition from state 2 to state 0
#         tess.back(140)
#         tess.fillcolor("green")
#         state_num = 0
#     wn.ontimer(advance_state_machine, 1000)

# Bind the event handler to the space key.

traffic_lights()

wn.listen()                      # Listen for events
wn.mainloop()
