1)

numbers = ([1, 2, 3, 4, 5])
odd = 0
even = 0

for n in numbers:
    if n%2==0:
        even+=1
    if n%2==1:
        odd+=1

print("There are", odd, "odd numbers")
print("There are", even, "even numbers")


2)

numbers = ([1, 2, 3, 4, 5])
even = 0

for n in numbers:
    if n%2==0:
        even = even + n
    else:
        print("Odd number detected")

print(even)

3)

numbers = ([1, 2, 3, 4, -1, -2, -3, -4, -5])
count = 0
waste = 0
for n in numbers:
    if n<0:
        count = count + 1
    if n>=0:
        waste = waste + 1

print(count)

4)

numbers = (["yeet", "yote", "yeehaw", "yipee", "yeeet"])
count = 0
waste = 0
for n in numbers:
    if len(n)==5:
        count+=1
    else:
        waste+=1

print(count)

5) 

numbers = ([1, 3, 5, 7, 9, 10])
count = 0
sum = 0
for n in numbers:
    if n%2 == 1:
        sum += n
    elif n%2 == 0:
        break

print(sum)

6)

numbers = (["yeet", "hello", "woo", "sam"])
count = 0
sum = 0
for n in numbers:
    if n == "sam":
        break
    else:
        count += 1

print(count)

7) 

-- I don't understand the question

8)

The function defined contains the numbers from 1 to 7. It repeats the print_multiples function and what that does is it takes i which is 1-7 and then it multiplies the numbers given by 1-7. It also has the end command which makes it have a space in between each multiplication table. 

9)

def print_triangular_numbers(n):
    start = 0
    total = 0
    if start < n:
        for i in range(n):
            start += 1
            total += start 
            print(start, total)
        
print_triangular_numbers(5)

10) 

def is_prime(n):
    if n > 1:
        for i in range(2,n):
            if (n%i) == 0:
                print(num, "is not a prime number") 
                break
        else:
            print(n,"is a prime number") 
            
is_prime(17)

11)

---

12)

import turtle
wn = turtle.Screen()
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
tess.shape("turtle")
tess.color("blue")

data = [(160,20), (-43,10), (270,8), (-43,12)]

for(length, angle) in data:
    tess.forward(length)
    tess.left(angle)

13)

import turtle
wn = turtle.Screen()
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
tess.shape("turtle")
tess.color("blue")
tess.speed(3)

data = [(100, 90), (100, 90), (100, 90), (100, 90), (0, -60), (100,120), (100,60)]

for(length, angle) in data:
    tess.forward(length)
    tess.right(angle)

14)

All can be drawn without lifting the pen. It's just a matter of finding the right measurements. Only issue would be the 2nd last one needing very specific measurements

15)

count = 0
def num_even_digits(number):
    for len(number) in number:
        total = number/(10*len(number))

num_even_digits(123456)
print(count)

NOT COMPLETE - GOT STUCK - NOT COMPLETE
